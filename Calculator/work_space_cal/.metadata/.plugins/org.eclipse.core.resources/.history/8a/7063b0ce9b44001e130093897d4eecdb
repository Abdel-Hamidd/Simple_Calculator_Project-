/***************************************************************************************************************
*                                          Module:  Digital Input/Output Interface                             *
*                                          File Name: MDIO_interface.h                                         *
*                                          Created on: May 5, 2023                                             *
*                                          Author: Abdel-Hamid Tarek                                           *
****************************************************************************************************************/

#ifndef DIO_INTERFACE_H_
#define DIO_INTERFACE_H_
/*==============================================================================================================================================
 * macros used with I/O
 *==============================================================================================================================================*/


#define DIO_u8PIN_OUTPUT		1
#define DIO_u8PIN_INPUT			0

#define DIO_u8PIN_HIGH			1
#define DIO_u8PIN_LOW			0

#define DIO_u8PORT_OUTPUT		0xff
#define DIO_u8PORT_INPUT		0x00

#define DIO_u8PORT_HIGH			0xff
#define DIO_u8PORT_LOW			0


#define DIO_u8PORTA				0
#define DIO_u8PORTB				1
#define DIO_u8PORTC				2
#define DIO_u8PORTD				3

#define DIO_u8PIN0				0
#define DIO_u8PIN1				1
#define DIO_u8PIN2				2
#define DIO_u8PIN3				3
#define DIO_u8PIN4				4
#define DIO_u8PIN5				5
#define DIO_u8PIN6				6
#define DIO_u8PIN7				7

/**
 * @brief 
 * Prototype   : DIO_u8SetPinDirection(u8 Copy_u8Port, u8 Copy_u8Pin, u8 Copy_u8Direction);
 * Description : Set direction of any PIN 
 * 
 * @param Copy_u8Port: Register: takes only DIO_PORTA,DIO_PORTB,DIO_PORTC,DIO_PORTD 
 * @param Copy_u8Pin PIN  : takes any pin from 0 to 7
 * @param  Copy_u8Direction : takes Direction INPUT OR OUTPUT 
 * @return u8 : u8 number used for error handling
 *			     (0) means no error,(1) means Undefined PORT Argument 
 */
u8 DIO_u8SetPinDirection(u8 Copy_u8Port, u8 Copy_u8Pin, u8 Copy_u8Direction);

/**
 * @brief 
 * Prototype   : DIO_u8SetPortDirection(u8 Copy_u8Port, u8 Copy_u8Direction);
 * Description : Set direction of any PORT
 * 
 * @param Copy_u8Port: Register: takes only DIO_PORTA,DIO_PORTB,DIO_PORTC,DIO_PORTD 
 * @param  Copy_u8Direction : takes Direction INPUT OR OUTPUT 
 * @return u8 : u8 number used for error handling
 *			     (0) means no error,(1) means Undefined PORT Argument 
 */
u8 DIO_u8SetPortDirection(u8 Copy_u8Port, u8 Copy_u8Direction);
/**
 * @brief 
 *  Prototype   : Du8 DIO_u8SetPinValue(u8 Copy_u8Port, u8 Copy_u8Pin, u8 Copy_u8Value);
 * Description : Assign Value to a spacific pin 
 * @param Copy_u8Port register: takes only DIO_PORTA,DIO_PORTB,DIO_PORTC,DIO_PORTD 
 * @param Copy_u8Pin  : takes only DIO_Px0,DIO_Px1,DIO_Px2,DIO_Px3,DIO_Px4,DIO_Px5,DIO_Px6,DIO_Px7 ex: DIO_PA0,DIO_PB6,DIO_PD2....
 * @param Copy_u8Value the value to be assigned HIGH or LOW
 * @return u8 : u8 number used for error handling
 *			     (0) means no error,(1) means Undefined PORT Argument
 */
u8 DIO_u8SetPinValue(u8 Copy_u8Port, u8 Copy_u8Pin, u8 Copy_u8Value);
/**
 * @brief 
 * Prototype   : Du8 DIO_u8SetPortValue(u8 Copy_u8Port, u8 Copy_u8Value);
 * Description : Assign Value to a spacific port 
 * @param Copy_u8Port register: takes only DIO_PORTA,DIO_PORTB,DIO_PORTC,DIO_PORTD
 * @param Copy_u8Value the value to be assigned to whole port 
 * @return u8 : u8 number used for error handling
 *			     (0) means no error,(1) means Undefined PORT Argument
 */
u8 DIO_u8SetPortValue(u8 Copy_u8Port, u8 Copy_u8Value);
/**
 * @brief 
 * Prototype   : DIO_u8GetPinValue(u8 Copy_u8Port, u8 Copy_u8Pin, u8* Copy_pu8Value);
 * Description : Read pin value of one bit of the register
 * @param Copy_u8Port Register: takes only DIO_PORTA,DIO_PORTB,DIO_PORTC,DIO_PORTD
 * @param Copy_u8Pin  : takes only DIO_Px0,DIO_Px1,DIO_Px2,DIO_Px3,DIO_Px4,DIO_Px5,DIO_Px6,DIO_Px7 ex: DIO_PA0,DIO_PB6,DIO_PD2....
 * @param Copy_pu8Value pointer to the  
 * @return u8 u8 actual reading (0 or 1) or number used for error handling
 */
u8 DIO_u8GetPinValue(u8 Copy_u8Port, u8 Copy_u8Pin, u8* Copy_pu8Value);

/**
 * @brief 
 * Prototype   : DIO_u8GetPinValue(u8 Copy_u8Port, u8 Copy_u8Pin, u8* Copy_pu8Value);
 * Description : Intialize whole port pins 
 */
void PORT_voidInit(void);

#endif  /* DIO_INTERFACE_H_ */

/***************************************************************************************************************/

